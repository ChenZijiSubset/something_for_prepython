
Exercise 2.10: Matrix-vector multiplication
A matrix  𝐀  and a vector  𝐛 , represented in Python as a 2D array and a 1D array, respectively, are given by:

𝐀=0−11112−15−1−15
 
𝐛=−217
 
Multiplying a matrix by a vector results in another vector  𝐜 , whose components are defined by the general rule:

𝐜𝑖=∑𝑗𝐀𝑖,𝑗𝐛𝑗
 
Define  𝐀  and  𝐛  as NumPy arrays
Write a function called multiply that takes two arguments, a matrix and a vector in the form of NumPy arrays, and returns a NumPy array containing their product.
Call this function on  𝐀  and  𝐛 , and store the result in a variable  𝑐 .


# Uncomment and complete this code - keep the names the same for testing purposes.

def multiply(A, b):
    row = A.shape[0]
    col = A.shape[1]
    result = np.zeros(col)
    for i in range(0, row):
        tmp = 0
        for j in range(0, col):
            tmp = tmp + A[i][j] * b[j]
        result[i] = tmp
    return result

A = np.array([[0, 12, -1], [-1, -1, -1], [11, 5, 5]])

b = np.array([-2, 1, 7])

c = multiply(A, b)
print(c)



REFERENCE: exercise-2_10
SATISFIED: False
MESSAGES:
  - SUCCESS: Your matrix A is correct. Nice!
  - SUCCESS: Your vector b is correct. Nice!
  - ERROR: You are not populating resulting vector correctly.
  - SUCCESS: Great! You created a zero-vector before the loop.
  - SUCCESS: Wow! The result of your multiplication is correct.
  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Running tests

---------------------------------------------------------------------
Test summary
    Passed: 6
    Failed: 0
[ooooooooook] 100.0% passed

{'passed': 6, 'failed': 0, 'locked': 0}
