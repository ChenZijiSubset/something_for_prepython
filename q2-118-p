
Exercise 1.18: Bouncing ball
A rubber ball is dropped from a height h_0. After each bounce, the height it rebounds to decreases by 10%, i.e. after one bounce, it reaches 0.9*h_0, after two bounces it reaches 0.9*0.9*h_0, etc. Write a Python function compute_heights that returns a list of the maximum heights of the ball after each bounce (including after 0 bounces, i.e. its initial height), until either the ball has bounced n times or its maximum height falls below h1. The function should take h_0, h_1 and n as keyword arguments, with default values of 1.0, 0.3 and 10, respectively.

HINT: If n bounces of the ball are not reached, the last value of height in the list should be the first height at which the ball fell below h1. More precisely, the last value is less than h1.


# Uncomment and complete this code - keep the names the same for testing purposes.
def compute_heights(h_0=1.0, h_1=0.3, n=10):
    l = []
    l.append(h_0)
    h = h_0
    for i in range(0, n):
        h = 0.9 * h
        l.append(h)
        if (h < h_1):
            break
    return l
    


REFERENCE: exercise-1_18
SATISFIED: False
MESSAGES:
  - SUCCESS: You are appending the correct height to a list. Well done!
  - ERROR: You are not counting the bounces correctly.
  - SUCCESS: Before the loop, you start with an empty list. Amazing!
  - SUCCESS: Before the loop, you set the ounter to zero. Great!
  - SUCCESS: Wow! Your function returns the correct solution.
