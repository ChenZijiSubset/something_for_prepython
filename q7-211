Exercise 2.11: Vectorised function
Let  𝐴33  be the two-dimensional array

𝐀33=0−11112−15−1−15
 
Implement and apply the function

𝑓(𝑥)=𝑥3+𝑥𝑒𝑥+1
 
to each element in  𝐴33 . Then calculate the result of the array expression  𝐴333+𝐴33𝑒𝐴33+1 , and demonstrate that the end result of the two methods are the same.

# Uncomment and complete this code - keep the names the same for testing purposes.

A33 = np.zeros((3,3))
A33 = np.array([[0, 12, -1], [-1, -1, -1], [11, 5, 5]])

def f_cubic(A):
    result = np.zeros((A.shape[0], A.shape[1]))
    for i in range(0, A.shape[0]):
        for j in range(0, A.shape[1]):
            tmp1 = A[i][j]**3
            tmp2 = A[i][j] * np.exp(A[i][j])
            result[i][j] = tmp1 + tmp2 + 1
    return result

f = A33 @ A33 @ A33 + A33 @ np.exp(A33) + 1 

print(f)
print(f_cubic(A33))
#     ...

[[-6.00387272e+04 -4.86998606e+02 -1.87998606e+02]
 [-5.98915096e+04 -1.63021572e+05 -1.37148918e+02]
 [ 2.99331548e+05  1.79154061e+06  5.91951867e+02]]
[[ 1.00000000e+00  1.95478650e+06 -3.67879441e-01]
 [-3.67879441e-01 -3.67879441e-01 -3.67879441e-01]
 [ 6.59947559e+05  8.68065796e+02  8.68065796e+02]]
 
 
REFERENCE: exercise-2_11
SATISFIED: False
MESSAGES:
  - ERROR: You are not populating resulting vector correctly.
  - SUCCESS: You created a zero-matrix before looping.
  - ERROR: Hmmm... The result of your function is wrong.
  - SUCCESS: Your matrix A33 is correct.
  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Running tests

---------------------------------------------------------------------
Test summary
    Passed: 3
    Failed: 0
[ooooooooook] 100.0% passed

{'passed': 3, 'failed': 0, 'locked': 0}
